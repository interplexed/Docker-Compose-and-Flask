services:
  webapp:
    build: .
    ports:
      - "5000:5000"
    env_file:
      - .env
    environment:
      - FLASK_ENV=${FLASK_ENV}
      - FLASK_DEBUG=${FLASK_DEBUG}
      - SECRET_KEY=${SECRET_KEY}
      - DATABASE_USER=${DATABASE_USER}
      - DATABASE_PW=${DATABASE_PW}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}
      - DATABASE_DB=${DATABASE_DB}
      - DATABASE_URL=postgresql://${DATABASE_USER}:${DATABASE_PW}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_DB}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./localapp:/localapp
    restart: unless-stopped
    entrypoint: ["/localapp/entrypoint.sh"]

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    depends_on:
      - webapp
    volumes:
      - ./localapp/static:/localapp/static
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped

  db:
    image: postgres:15
    ports:
      - "5432:5432"
    env_file:
    - .env
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PW}
      POSTGRES_DB: ${DATABASE_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DATABASE_USER} -d ${DATABASE_DB}"]
      interval: 10s
      retries: 5
      timeout: 5s
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  pgdata:
